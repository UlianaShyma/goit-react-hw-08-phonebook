{"version":3,"file":"static/js/690.c75fab36.chunk.js","mappings":"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","sources":["components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx","pages/Login.js","utils/RegExp.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(NavLink)`\n  color: black;\n  color: grey;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    color: blue;\n  }\n`;\n","import { Visibility, VisibilityOff } from '@mui/icons-material';\nimport {\n  Box,\n  Button,\n  Container,\n  FormControl,\n  IconButton,\n  Input,\n  InputAdornment,\n  InputLabel,\n  TextField,\n  Typography,\n  Avatar,\n  Grid,\n} from '@mui/material';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/auth-operations';\nimport { emailRegExp } from 'utils/RegExp';\nimport { StyledLink } from './LoginForm.styled';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const [showPassword, setShowPassword] = useState(false);\n  const handleClickShowPassword = () => setShowPassword(show => !show);\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState();\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'email':\n        setEmail(value);\n        let regEmail = new RegExp(emailRegExp).test(value);\n        setEmailError(regEmail ? null : 'Invalid email format');\n        break;\n\n      case 'password':\n        setPassword(value);\n        if (value.length > 0 && value.length < 7) {\n          setPasswordError('Password must be at least 7 characters');\n        } else {\n          setPasswordError(null);\n        }\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    dispatch(\n      logIn({\n        email: email.trim(),\n        password: password.trim(),\n      })\n    );\n    reset();\n  };\n\n  const reset = () => {\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <Container component=\"div\" maxWidth=\"sm\">\n      <Box\n        component=\"form\"\n        onSubmit={handleSubmit}\n        sx={{\n          marginTop: '60px',\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          backgroundColor: 'white',\n          padding: '20px',\n          boxShadow: ' rgb(33 33 33) 0px 2px 10px 1px',\n        }}\n      >\n        <Avatar\n          src=\"/broken-image.jpg\"\n          sx={{ bgcolor: 'grey', marginBottom: '10px' }}\n        />\n        <Typography component=\"h1\" variant=\"h5\">\n          Log in\n        </Typography>\n\n        <TextField\n          sx={{ m: 1, maxWidth: '100%', width: '35ch', marginBottom: '20px' }}\n          error={Boolean(emailError)}\n          helperText={emailError}\n          margin=\"normal\"\n          id=\"standard-multiline-flexible\"\n          label=\"Email\"\n          required\n          maxRows={4}\n          variant=\"standard\"\n          name=\"email\"\n          autoComplete=\"email\"\n          type=\"email\"\n          autoFocus\n          fullWidth\n          value={email}\n          onChange={handleChange}\n        />\n\n        <FormControl\n          sx={{ m: 1, maxWidth: '100%', width: '35ch', marginBottom: '20px' }}\n          variant=\"standard\"\n        >\n          <InputLabel htmlFor=\"standard-adornment-password\">\n            Password *\n          </InputLabel>\n          <Input\n            error={Boolean(passwordError)}\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n            required\n            id=\"standard-adornment-password\"\n            type={showPassword ? 'text' : 'password'}\n            inputProps={{\n              'aria-describedby': 'password-helper-text',\n            }}\n            endAdornment={\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle password visibility\"\n                  onClick={handleClickShowPassword}\n                  onMouseDown={handleMouseDownPassword}\n                >\n                  {showPassword ? <VisibilityOff /> : <Visibility />}\n                </IconButton>\n              </InputAdornment>\n            }\n          />\n          <Typography\n            id=\"password-helper-text\"\n            variant=\"caption\"\n            color={passwordError ? 'error' : 'text'}\n          >\n            {passwordError}\n          </Typography>\n        </FormControl>\n        <Button\n          sx={{\n            m: 1,\n            maxWidth: '100%',\n            width: '40ch',\n            marginBottom: '20px',\n          }}\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          disabled={Boolean(emailError ?? passwordError)}\n        >\n          LOG IN\n        </Button>\n        <Grid container justifyContent=\"center\">\n          <Grid item>\n            <StyledLink to=\"/register\">\n              Don't have an account yet? Sign up\n            </StyledLink>\n          </Grid>\n        </Grid>\n      </Box>\n    </Container>\n  );\n};\n","import { LoginForm } from 'components/LoginForm/LoginForm';\n\nconst Login = () => {\n  return <LoginForm />;\n};\nexport default Login;\n","export const emailRegExp = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n\nexport const passwordRegExp = /^[A-Za-z][A-Za-z0-9_]{2,19}$/;\n"],"names":["StyledLink","styled","NavLink","LoginForm","dispatch","useDispatch","useState","showPassword","setShowPassword","email","setEmail","password","setPassword","emailError","setEmailError","passwordError","setPasswordError","handleChange","event","currentTarget","name","value","regEmail","RegExp","emailRegExp","test","length","reset","Container","component","maxWidth","Box","onSubmit","preventDefault","logIn","trim","sx","marginTop","display","flexDirection","alignItems","backgroundColor","padding","boxShadow","Avatar","src","bgcolor","marginBottom","Typography","variant","TextField","m","width","error","Boolean","helperText","margin","id","label","required","maxRows","autoComplete","type","autoFocus","fullWidth","onChange","FormControl","InputLabel","htmlFor","Input","inputProps","endAdornment","InputAdornment","position","IconButton","onClick","show","onMouseDown","VisibilityOff","Visibility","color","Button","disabled","Grid","container","justifyContent","item","to"],"sourceRoot":""}