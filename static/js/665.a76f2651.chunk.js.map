{"version":3,"file":"static/js/665.a76f2651.chunk.js","mappings":"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","sources":["components/LoginForm/LoginForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/Register.js","utils/RegExp.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(NavLink)`\n  color: black;\n  color: grey;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    color: blue;\n  }\n`;\n","import { Visibility, VisibilityOff } from '@mui/icons-material';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Container,\n  FormControl,\n  Grid,\n  IconButton,\n  Input,\n  InputAdornment,\n  InputLabel,\n  TextField,\n  Typography,\n} from '@mui/material';\nimport { StyledLink } from 'components/LoginForm/LoginForm.styled';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/auth-operations';\nimport { emailRegExp } from 'utils/RegExp';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState();\n\n  const handleClickShowPassword = () => setShowPassword(show => !show);\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'email':\n        setEmail(value);\n        let regEmail = new RegExp(emailRegExp).test(value);\n        setEmailError(regEmail ? null : 'Invalid email format');\n        break;\n\n      case 'password':\n        setPassword(value);\n        if (value.length > 0 && value.length < 7) {\n          setPasswordError('Password must be at least 7 characters');\n        } else {\n          setPasswordError(null);\n        }\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    dispatch(\n      register({\n        name: name.trim(),\n        email: email.trim(),\n        password: password.trim(),\n      })\n    );\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n  return (\n    <Container component=\"div\" maxWidth=\"sm\">\n      <Box\n        component=\"form\"\n        onSubmit={handleSubmit}\n        sx={{\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          backgroundColor: 'white',\n          padding: '20px',\n          boxShadow: ' rgb(33 33 33) 0px 2px 10px 1px',\n        }}\n      >\n        <Avatar\n          src=\"/broken-image.jpg\"\n          sx={{ bgcolor: 'grey', marginBottom: '10px' }}\n        />\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n\n        <TextField\n          sx={{ m: 1, maxWidth: '100%', width: '35ch', marginBottom: '10px' }}\n          variant=\"standard\"\n          margin=\"normal\"\n          id=\"standard-multiline-flexible\"\n          label=\"Name \"\n          multiline\n          required\n          maxRows={4}\n          autoComplete=\"name\"\n          autoFocus\n          name=\"name\"\n          type=\"text\"\n          value={name}\n          onChange={handleChange}\n        />\n\n        <TextField\n          sx={{ m: 1, maxWidth: '100%', width: '35ch', marginBottom: '10px' }}\n          variant=\"standard\"\n          error={Boolean(emailError)}\n          helperText={emailError}\n          margin=\"normal\"\n          required\n          fullWidth\n          label=\"Email Address\"\n          name=\"email\"\n          autoComplete=\"email\"\n          type=\"email\"\n          value={email}\n          id=\"standard-multiline-flexible\"\n          maxRows={4}\n          onChange={handleChange}\n        />\n\n        <FormControl\n          sx={{ m: 1, maxWidth: '100%', width: '35ch', marginBottom: '20px' }}\n          variant=\"standard\"\n        >\n          <InputLabel htmlFor=\"standard-adornment-password\">\n            Password *\n          </InputLabel>\n          <Input\n            error={Boolean(passwordError)}\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n            required\n            id=\"standard-adornment-password\"\n            type={showPassword ? 'text' : 'password'}\n            inputProps={{\n              'aria-describedby': 'password-helper-text',\n            }}\n            endAdornment={\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle password visibility\"\n                  onClick={handleClickShowPassword}\n                  onMouseDown={handleMouseDownPassword}\n                >\n                  {showPassword ? <VisibilityOff /> : <Visibility />}\n                </IconButton>\n              </InputAdornment>\n            }\n          />\n          <Typography\n            id=\"password-helper-text\"\n            variant=\"caption\"\n            color={passwordError ? 'error' : 'text'}\n          >\n            {passwordError}\n          </Typography>\n        </FormControl>\n        <Button\n          sx={{ m: 1, marginBottom: '25px', maxWidth: '100%', width: '40ch' }}\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          disabled={Boolean(emailError ?? passwordError)}\n        >\n          SIGN UP\n        </Button>\n\n        <Grid container justifyContent=\"center\">\n          <Grid item>\n            <StyledLink to=\"/login\">Already have an account? Log in</StyledLink>\n          </Grid>\n        </Grid>\n      </Box>\n    </Container>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nconst Register = () => {\n  return <RegisterForm />;\n};\n\nexport default Register;\n","export const emailRegExp = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n\nexport const passwordRegExp = /^[A-Za-z][A-Za-z0-9_]{2,19}$/;\n"],"names":["StyledLink","styled","NavLink","RegisterForm","dispatch","useDispatch","useState","showPassword","setShowPassword","name","setName","email","setEmail","password","setPassword","emailError","setEmailError","passwordError","setPasswordError","handleChange","event","currentTarget","value","regEmail","RegExp","emailRegExp","test","length","reset","Container","component","maxWidth","Box","onSubmit","preventDefault","register","trim","sx","marginTop","display","flexDirection","alignItems","backgroundColor","padding","boxShadow","Avatar","src","bgcolor","marginBottom","Typography","variant","TextField","m","width","margin","id","label","multiline","required","maxRows","autoComplete","autoFocus","type","onChange","error","Boolean","helperText","fullWidth","FormControl","InputLabel","htmlFor","Input","inputProps","endAdornment","InputAdornment","position","IconButton","onClick","show","onMouseDown","VisibilityOff","Visibility","color","Button","disabled","Grid","container","justifyContent","item","to"],"sourceRoot":""}